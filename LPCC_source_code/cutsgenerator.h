#ifndef _CUTGENERATOR_H
#define _CUTGENERATOR_H
int CGLP_cutgenerator(CPXENVptr env, 
					  CPXLPptr cg_lp, 
					  STARTINFO *start_p, 
					  double *q_coef,
					  MATRIX matrix_N,
					  MATRIX matrix_M,
					  const int violation_index, 
					  const int param_k,
					  const int param_m,
					  const int param_n,
					  double *cutoff_point, 
					  double *alpha, 
					  double *beta, 
					  int *solnstat_p);
int add_disjunctivecuts(CPXENVptr env, 
						CPXLPptr rx_lp, 	
						CPXLPptr cg_lp,
						double *q_coef,
						MATRIX matrix_N,
						MATRIX matrix_M,
						STARTINFO *lp_start,								 
						const int param_n,								 
						const int param_m, 								 
						const int param_k,	
						double param_p,
						double *opt_soln,
						double *opt_obj,
						int *lpcc_stat);
int compute_UB(CPXENVptr env, 
			   CPXLPptr rx_lp, 	
			   STARTINFO rx_lp_start,								 
			   const int param_n,								 
			   const int param_m, 								 
			   const int param_k,	
			   const double lpcc_ub,
			   const int num_var,
			   const char y_w,
			   const int i_index,
			   int param_p,
			   double *UB);
int add_boundcuts(CPXENVptr env, 
				  CPXLPptr rx_lp, 	
				  STARTINFO *lp_start,								 
				  const int param_n,								 
				  const int param_m, 								 
				  const int param_k,	
				  const int param_p,
				  const int loop_limit,
				  const double lpcc_ub,
				  double *opt_soln,
				  double *opt_obj,
				  int *lpcc_stat);
int boundcuts_generator(CPXENVptr env, 
						CPXLPptr rx_lp, 	
						STARTINFO rx_lp_start,								 
						const int param_n,								 
						const int param_m, 								 
						const int param_k,	
						const double lpcc_ub,
						const int num_var,
						int *select_index,
						int param_p,
						CONSTRAINT_SET *cut_ptr);
int simplecuts_generator(CPXENVptr env, 
						 CPXLPptr rx_lp, 
						 const int param_n,
						 const int param_m, 
						 const int param_k,
						 const int violate_complementary_index, 
						 const double violation_complementary_1,
						 const double violation_complementary_2, 
						 CONSTRAINT_SET *cut_ptr);
int add_simplecuts(CPXENVptr env, 
				   CPXLPptr rx_lp, 	
				   STARTINFO *lp_start,								 
				   const int param_n,								 
				   const int param_m, 								 
				   const int param_k,	
				   double param_p,
				   double *opt_soln,
				   double *opt_obj,
				   int *lpcc_stat);
int generateNodeSimpleCuts(CPXENVptr env, 
						   CPXLPptr rx_lp, 
						   const int param_n,
						   const int param_m, 
						   const int param_k,
						   const int violate_complementary_index,
						   const double violation_complementary_1,
						   const double violation_complementary_2,
						   NODE **branchnode_ptr);
int get_simplex_tableau_by_violation_index(CPXENVptr env, 
										   CPXLPptr rx_lp, 
										   const int param_n,
										   const int param_m,
										   const int param_k,
										   const int violate_complementary_index,
										   double **y_tableau,
										   double **w_tableau);
int get_simplex_tableau(CPXENVptr env, 
						CPXLPptr rx_lp, 								 
						const int param_n,								 
						const int param_m, 								 
						const int param_k,	
						const int violation_cnt,
						STARTINFO lp_start,
						double *lp_soln,
						double **y_hat,
						double **w_hat,
						double **y_bar,
						double **w_bar,
						double ***y_tableau,
						double ***w_tableau,
						int *violation_index,
						const int ub_setting);
int flowcovercut_generator_1(const int num_cols,
							 const int num_rows,
							 const int param_n,
							 const int param_m,
							 const int param_k,
							 const int violation_cnt,
							 const int violation_index,
							 int *cstat,
							 double *y_hat,
							 double *w_hat,
							 double *y_bar,
							 double *w_bar,
							 double **y_tableau,
							 double **w_tableau,
							 CONSTRAINT_SET *cut_ptr);
int flowcovercut_generator_2(const int num_cols,
							 const int num_rows,
							 const int param_n,
							 const int param_m,
							 const int param_k,
							 const int violation_cnt,
							 const int violation_index,
							 int *cstat,
							 double *y_hat,
							 double *w_hat,
							 double *y_bar,
							 double *w_bar,
							 double **y_tableau,
							 double **w_tableau,
							 CONSTRAINT_SET *cut_ptr);
int flowcovercut_generator(CPXENVptr env, 
						   CPXLPptr rx_lp, 
						   STARTINFO lp_start,
						   const int param_n,
						   const int param_m,
						   const int param_k,
						   double *lp_soln,
						   CONSTRAINT_SET *cut_ptr);
int compute_coef_flowcovercut_1(int num_cols,
							  int *cstat,
							  double *tableau_1,
							  double *tableau_2,
							  double hat_1,
							  double hat_2,
							  double sum_hat,
							  double ub,
							  double *sum_V_tableau,
							  double *cut_coef,
							  double *norm);
int compute_coef_flowcovercut_2(int num_cols,
								int *cstat,
								const int violation_cnt,
								double **y_tableau,
								double **w_tableau,
								double *y_hat,
								double *w_hat,
								double *y_bar,
								double *w_bar,
								int *V_select,
								double *cut_coef,
								double *norm);
int compute_coef_ext_simplecut(int num_cols,
							   int *cstat,
							   const int violation_cnt,
							   double **y_tableau,
							   double **w_tableau,
							   double *y_hat,
							   double *w_hat,
							   double *y_bar,
							   double *w_bar,
							   int **V_select,
							   const int candidate_size,
							   const int V_size,
							   double *cut_coef,
							   double *norm);
int add_flowcovercut(CPXENVptr env, 
					 CPXLPptr rx_lp, 	
					 STARTINFO *lp_start,								 
					 const int param_n,								 
					 const int param_m, 								 
					 const int param_k,	
					 double param_p,
					 double *opt_soln,
					 double *opt_obj,
					 int *lpcc_stat);
int generate_candidate_V_set(int num_cols,
							 const int violation_cnt,
							 int *cstat,
							 double **y_tableau,
							 double **w_tableau,
							 double *y_hat,
							 double *w_hat,
							 double *y_bar,
							 double *w_bar,
							 const int V_size,
							 int ***V_set,
							 int *cand_cnt);
int ext_simple_cut_generator(CPXENVptr env, 
							 CPXLPptr rx_lp, 
							 STARTINFO lp_start,
							 const int param_n,
							 const int param_m,
							 const int param_k,
							 double *lp_soln,
							 const int init_v_size,
							 CONSTRAINT_SET *cut_ptr);
int add_mccormickcut(CPXENVptr env,
					 CPXLPptr lp, 
					 const int param_n,
					 const int param_m, 
					 const int param_k, 
					 MATRIX matrix_N, 
					 MATRIX matrix_M, 
					 double *q_coef,
					 const int refinement_cnt,
					 int *processing_stat,
					 int *initial_subproblem_cnt,
					 int **initial_subproblem_stat,
					 int *x_start_index,
					 int *ybar_start_index,
					 int *mcc_start_row,
					 int *mcc_start_col,
					 double ***p_x_lb,
					 double ***p_x_ub,
					 double ***p_y_lb,
					 double ***p_y_ub,
					 const int	   x_p_cnt,
					 const int	   y_p_cnt);
int get_refined_VAR_bound(CPXENVptr env, 
						  CPXLPptr lp, 									 
						  const int param_n,								 
						  const int param_m, 								 
						  const int param_k,	
						  const int var_index,
						  const int maxormin,
						  const int param_p,
						  double *var_bound);
int clearcutpool(CPXENVptr env,
				 CPXLPptr lp,
				 int start_row,
				 int start_col,
				 int cut_cnt);
int ext_bound_cuts_generator(CPXENVptr env, 
							 CPXLPptr rx_lp, 
							 const int param_n,
							 const int param_m,
							 const int param_k,
							 const int violate_complementary_index,
							 const double ub,
							 const int direction,
							 CONSTRAINT_SET *cut_ptr);
int partition_McCormickRefinement(CPXENVptr env,
									CPXLPptr lp,
									int param_n,
									int param_m,
									int param_k,
									int *subproblem_stat,
									double *x_lb,
									double *x_ub,
									double *ybar_lb,
									double *ybar_ub,
									double **ystar,
									int refinement_cnt,
									int y_bar_start_index,
									int mccboundconstraint_position_row,
									int mccboundconstraint_position_col);
#endif